<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" Width="800" Height="450"
        x:Class="MarkdownViewerDemo.MainWindow"
        xmlns:mdc="clr-namespace:VectSharp.MarkdownCanvas;assembly=VectSharp.MarkdownCanvas"
        Title="Markdown viewer demo">
  <Grid Margin="10">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="1*" />
    </Grid.RowDefinitions>

    <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center">
      <Button Click="OpenClicked">Open Markdown file...</Button>
    </StackPanel>
    <mdc:MarkdownCanvasControl Grid.Row="1" FontSize="16" Margin="0,10,0,0" Name="MarkdownCanvas">
      <mdc:MarkdownCanvasControl.DocumentSource>
# Markdown viewer

This is an example of a Markdown viewer program that uses a `MarkdownCanvasControl` to display the contents of a Markdown file.

Use the button at the top to open your own Markdown source file.

Most Markdown features are supported; see the readme in the [VectSharp.Markdown GitHub repository](https://github.com/arklumpus/VectSharp/tree/master/VectSharp.Markdown) for a list of supported and unsupported features.

When the container is resized, the document is automatically reflowed in order to fill all the available horizontal space. 

External links are opened in the default web browser, while internal links cause the control to scroll to the location of the target.

Images are downloaded from the internet the first time they are required; the results are cached and reused for subsequent requests. The cache is cleared when the application exits (if the application crashes, the cache is cleared the next time the application exits successfully).

As a proof-of-concept, an interesting use case would be to display syntax-highlighted (read-only) source code:

```CSharp
using System; 
  
namespace Hello
{  
    class World
    {
        static void Main(string[] args)
        {      
            Console.WriteLine("Hello World!"); 
        } 
    } 
} 
```
      </mdc:MarkdownCanvasControl.DocumentSource>
    </mdc:MarkdownCanvasControl>
  </Grid>
</Window>
